{"remainingRequest":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\services\\UserService.js","dependencies":[{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\services\\UserService.js","mtime":1553768319512},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport storageService from './StorageService.js';\nvar users = null;\nvar USER_ROUTE = process.env.NODE_ENV !== 'development' ? '/user' : 'http://localhost:3007/user';\nvar CURR_USER = 'currUser';\n\nfunction getUsers() {}\n\nfunction _createUsers() {}\n\nfunction updateUser(user) {\n  return axios.post(\"\".concat(USER_ROUTE, \"/\").concat(user._id), user).then(function (user) {\n    return user.data;\n  });\n}\n\nfunction getUserById(userId) {\n  return axios.get(\"\".concat(USER_ROUTE, \"/\").concat(userId)).then(function (user) {\n    return user.data;\n  });\n}\n\nfunction logIn(user) {\n  return axios.post(\"\".concat(USER_ROUTE, \"/login\"), user).then(function (user) {\n    user = user.data;\n    storageService.store(CURR_USER, user);\n    return user;\n  }).catch(function () {\n    throw 'wrong user or pass';\n  });\n}\n\nfunction signUp(newUser) {\n  newUser.groups = [];\n  newUser.isAdmin = false;\n  newUser.img = '';\n  return axios.post(\"\".concat(USER_ROUTE, \"/signup\"), newUser).then(function (user) {\n    user = user.data;\n    storageService.store(CURR_USER, user);\n    return user;\n  }).catch(function () {\n    return 'could not sign up';\n  });\n}\n\nfunction checkIfLogged() {\n  return storageService.load(CURR_USER);\n}\n\nfunction logOut() {\n  storageService.remove(CURR_USER);\n}\n\nfunction addGroupToUser(ids) {\n  return axios.put(\"\".concat(USER_ROUTE, \"/addGroup/\").concat(ids.userId), ids);\n}\n\nexport default {\n  getUserById: getUserById,\n  logIn: logIn,\n  signUp: signUp,\n  checkIfLogged: checkIfLogged,\n  logOut: logOut,\n  addGroupToUser: addGroupToUser,\n  updateUser: updateUser\n};",{"version":3,"sources":["C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\services\\UserService.js"],"names":["axios","storageService","users","USER_ROUTE","process","env","NODE_ENV","CURR_USER","getUsers","_createUsers","updateUser","user","post","_id","then","data","getUserById","userId","get","logIn","store","catch","signUp","newUser","groups","isAdmin","img","checkIfLogged","load","logOut","remove","addGroupToUser","ids","put"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,IAAIC,KAAK,GAAG,IAAZ;AACA,IAAMC,UAAU,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA1B,GAA2C,OAA3C,GAAqD,4BAAxE;AAEA,IAAMC,SAAS,GAAG,UAAlB;;AAEA,SAASC,QAAT,GAAoB,CAEnB;;AAED,SAASC,YAAT,GAAwB,CACvB;;AAED,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACrB,SAAOX,KAAK,CAACY,IAAN,WAAcT,UAAd,cAA4BQ,IAAI,CAACE,GAAjC,GAAuCF,IAAvC,EACNG,IADM,CACD,UAAAH,IAAI;AAAA,WAAIA,IAAI,CAACI,IAAT;AAAA,GADH,CAAP;AAEH;;AAED,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AACzB,SAAOjB,KAAK,CAACkB,GAAN,WAAaf,UAAb,cAA2Bc,MAA3B,GACFH,IADE,CACG,UAAAH,IAAI;AAAA,WAAIA,IAAI,CAACI,IAAT;AAAA,GADP,CAAP;AAEH;;AAED,SAASI,KAAT,CAAeR,IAAf,EAAqB;AACjB,SAAOX,KAAK,CAACY,IAAN,WAAcT,UAAd,aAAkCQ,IAAlC,EACFG,IADE,CACG,UAAAH,IAAI,EAAI;AACVA,IAAAA,IAAI,GAAGA,IAAI,CAACI,IAAZ;AACAd,IAAAA,cAAc,CAACmB,KAAf,CAAqBb,SAArB,EAAgCI,IAAhC;AACA,WAAOA,IAAP;AACH,GALE,EAMFU,KANE,CAMI,YAAM;AAAE,UAAO,oBAAP;AAA8B,GAN1C,CAAP;AAOH;;AACD,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;AAErBA,EAAAA,OAAO,CAACC,MAAR,GAAiB,EAAjB;AACAD,EAAAA,OAAO,CAACE,OAAR,GAAkB,KAAlB;AACAF,EAAAA,OAAO,CAACG,GAAR,GAAc,EAAd;AAEA,SAAO1B,KAAK,CAACY,IAAN,WAAcT,UAAd,cAAmCoB,OAAnC,EACFT,IADE,CACG,UAAAH,IAAI,EAAI;AACVA,IAAAA,IAAI,GAAGA,IAAI,CAACI,IAAZ;AACAd,IAAAA,cAAc,CAACmB,KAAf,CAAqBb,SAArB,EAAgCI,IAAhC;AACA,WAAOA,IAAP;AACH,GALE,EAMFU,KANE,CAMI;AAAA,WAAM,mBAAN;AAAA,GANJ,CAAP;AAOH;;AAED,SAASM,aAAT,GAAyB;AACrB,SAAO1B,cAAc,CAAC2B,IAAf,CAAoBrB,SAApB,CAAP;AACH;;AAED,SAASsB,MAAT,GAAkB;AACd5B,EAAAA,cAAc,CAAC6B,MAAf,CAAsBvB,SAAtB;AACH;;AACD,SAASwB,cAAT,CAAwBC,GAAxB,EAA6B;AACzB,SAAOhC,KAAK,CAACiC,GAAN,WAAa9B,UAAb,uBAAoC6B,GAAG,CAACf,MAAxC,GAAkDe,GAAlD,CAAP;AACH;;AACD,eAAe;AACXhB,EAAAA,WAAW,EAAXA,WADW;AAEXG,EAAAA,KAAK,EAALA,KAFW;AAGXG,EAAAA,MAAM,EAANA,MAHW;AAIXK,EAAAA,aAAa,EAAbA,aAJW;AAIIE,EAAAA,MAAM,EAANA,MAJJ;AAKXE,EAAAA,cAAc,EAAdA,cALW;AAMXrB,EAAAA,UAAU,EAAVA;AANW,CAAf","sourcesContent":["\r\nimport axios from 'axios'\r\nimport storageService from './StorageService.js'\r\nvar users = null\r\nconst USER_ROUTE = (process.env.NODE_ENV !== 'development') ? '/user' : 'http://localhost:3007/user'\r\n\r\nconst CURR_USER = 'currUser'\r\n\r\nfunction getUsers() {\r\n\r\n}\r\n\r\nfunction _createUsers() {\r\n}\r\n\r\nfunction updateUser(user){\r\n    return axios.post(`${USER_ROUTE}/${user._id}`,user)\r\n    .then(user => user.data)\r\n}\r\n\r\nfunction getUserById(userId) {\r\n    return axios.get(`${USER_ROUTE}/${userId}`)\r\n        .then(user => user.data)\r\n}\r\n\r\nfunction logIn(user) {\r\n    return axios.post(`${USER_ROUTE}/login`, user)\r\n        .then(user => {\r\n            user = user.data\r\n            storageService.store(CURR_USER, user)\r\n            return user\r\n        })\r\n        .catch(() => { throw ('wrong user or pass') })\r\n}\r\nfunction signUp(newUser) {\r\n\r\n    newUser.groups = []\r\n    newUser.isAdmin = false\r\n    newUser.img = ''\r\n\r\n    return axios.post(`${USER_ROUTE}/signup`, newUser)\r\n        .then(user => {\r\n            user = user.data\r\n            storageService.store(CURR_USER, user)\r\n            return user\r\n        })\r\n        .catch(() => 'could not sign up')\r\n}\r\n\r\nfunction checkIfLogged() {\r\n    return storageService.load(CURR_USER)\r\n}\r\n\r\nfunction logOut() {\r\n    storageService.remove(CURR_USER)\r\n}\r\nfunction addGroupToUser(ids) {\r\n    return axios.put(`${USER_ROUTE}/addGroup/${ids.userId}`, ids)\r\n}\r\nexport default {\r\n    getUserById,\r\n    logIn,\r\n    signUp,\r\n    checkIfLogged, logOut,\r\n    addGroupToUser,\r\n    updateUser\r\n} "]}]}