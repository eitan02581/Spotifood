{"remainingRequest":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\store\\user-store.js","dependencies":[{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\store\\user-store.js","mtime":1553929940127},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\Users\\\\Ron Elnekave\\\\Desktop\\\\spotifood\\\\oved\\\\spotifood\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport userService from '../services/UserService.js';\nimport uploadService from '../services/UploadService.js';\nVue.use(Vuex);\nvar userStore = {\n  state: {\n    user: null\n  },\n  getters: {\n    user: function user(state) {\n      return state.user;\n    }\n  },\n  mutations: {\n    setUser: function setUser(state, _ref) {\n      var user = _ref.user;\n      state.user = user;\n    },\n    cleanUser: function cleanUser(state) {\n      state.user = null; // state.is\n    }\n  },\n  actions: {\n    checkIfLogged: function checkIfLogged(_ref2) {\n      var commit = _ref2.commit;\n      var user = userService.checkIfLogged();\n      if (!user) return;\n      commit({\n        type: 'setUser',\n        user: user\n      });\n      return _Promise.resolve(user);\n    },\n    logIn: function logIn(_ref3, _ref4) {\n      var commit = _ref3.commit;\n      var user = _ref4.user;\n      return userService.logIn(user).then(function (user) {\n        commit({\n          type: 'setUser',\n          user: user\n        }); // TODO: RETURN A LOG FIX IT \n      }).catch(function (res) {\n        throw 'login err';\n      });\n    },\n    signUp: function signUp(_ref5, _ref6) {\n      var commit = _ref5.commit;\n      var newUser = _ref6.newUser;\n      return userService.signUp(newUser).then(function (user) {\n        console.log(user);\n        commit({\n          type: 'setUser',\n          user: user\n        }); // TODO: RETURN A LOG FIX IT \n      }).catch(function (res) {\n        return console.log(res);\n      });\n    },\n    logOut: function logOut(_ref7) {\n      var dispatch = _ref7.dispatch,\n          commit = _ref7.commit;\n      commit({\n        type: 'cleanUser'\n      }); // dispatch({type:''})\n\n      userService.logOut();\n    },\n    getUserById: function getUserById(_ref8, _ref9) {\n      var commit = _ref8.commit;\n      var userId = _ref9.userId;\n      return userService.getUserById(userId).then(function (user) {\n        return user;\n      });\n    },\n    addGroupToUser: function addGroupToUser(_ref10, _ref11) {\n      var dispatch = _ref10.dispatch,\n          commit = _ref10.commit;\n      var ids = _ref11.ids;\n      console.log('hey man ', ids);\n      return userService.addGroupToUser(ids).then(function () {\n        'group added';\n      });\n    },\n    updateUser: function updateUser(_ref12, _ref13) {\n      var commit = _ref12.commit;\n      var user = _ref13.user;\n      return userService.updateUser(user).then(function (res) {\n        return res;\n      });\n    },\n    uploadImg: function uploadImg(_ref14, _ref15) {\n      var commit = _ref14.commit;\n      var userId = _ref15.userId,\n          img = _ref15.img;\n      // console.log(\"userId\",userId)\n      return uploadService.uploadUserImg(img, userId).then(function (res) {\n        return res;\n      });\n    }\n  }\n};\nexport default userStore;",{"version":3,"sources":["C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\store\\user-store.js"],"names":["Vue","Vuex","userService","uploadService","use","userStore","state","user","getters","mutations","setUser","cleanUser","actions","checkIfLogged","commit","type","resolve","logIn","then","catch","res","signUp","newUser","console","log","logOut","dispatch","getUserById","userId","addGroupToUser","ids","updateUser","uploadImg","img","uploadUserImg"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport userService from '../services/UserService.js';\r\nimport uploadService from '../services/UploadService.js'\r\n\r\n\r\nVue.use(Vuex)\r\n\r\nconst userStore = {\r\n    state: {\r\n        user: null\r\n    },\r\n    getters: {\r\n        user: (state) => state.user\r\n    },\r\n    mutations: {\r\n        setUser(state, { user }) {\r\n            state.user = user\r\n        },\r\n        cleanUser(state) {\r\n            state.user = null\r\n            // state.is\r\n        }\r\n    },\r\n    actions: {\r\n        checkIfLogged({ commit }) {\r\n            var user = userService.checkIfLogged()\r\n            if (!user) return\r\n            commit({ type: 'setUser', user })\r\n            return Promise.resolve(user)\r\n        },\r\n        logIn({ commit }, { user }) {\r\n            return userService.logIn(user).then(user => {\r\n                commit({ type: 'setUser', user })\r\n                // TODO: RETURN A LOG FIX IT \r\n            }).catch((res) => {throw('login err')})\r\n\r\n        },\r\n        signUp({ commit }, { newUser }) {\r\n            return userService.signUp(newUser)\r\n                .then(user => {\r\n                    console.log(user);\r\n                    commit({ type: 'setUser', user })\r\n                    // TODO: RETURN A LOG FIX IT \r\n                }).catch((res) => console.log(res))\r\n        },\r\n        logOut({ dispatch, commit }) {\r\n            commit({ type: 'cleanUser' })\r\n            // dispatch({type:''})\r\n            userService.logOut()\r\n        },\r\n        getUserById({ commit }, { userId }) {\r\n            return userService.getUserById(userId)\r\n                .then((user) => user)\r\n        },\r\n        addGroupToUser({ dispatch, commit }, { ids }) {\r\n            console.log('hey man ', ids);\r\n\r\n            return userService.addGroupToUser(ids).then(() => { 'group added' })\r\n        },\r\n        updateUser({ commit }, { user }) {\r\n            return userService.updateUser(user).then(res => res)\r\n        },\r\n        uploadImg({ commit }, { userId, img }) {\r\n            // console.log(\"userId\",userId)\r\n            return uploadService.uploadUserImg(img, userId).then(res => res)\r\n        }\r\n    }\r\n}\r\n\r\nexport default userStore"]}]}