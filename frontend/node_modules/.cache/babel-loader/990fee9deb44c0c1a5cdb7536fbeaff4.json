{"remainingRequest":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\services\\GroupService.js","dependencies":[{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\services\\GroupService.js","mtime":1553768319489},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\Users\\\\Ron Elnekave\\\\Desktop\\\\spotifood\\\\oved\\\\spotifood\\\\frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport axios from 'axios';\nimport userService from './UserService';\nimport recipesService from './RecipeService'; // TODO: UPDATE TO THE ACTUAL PROJ NAME\n\nvar GROUP_ROUTE = process.env.NODE_ENV !== 'development' ? '/group' : 'http://localhost:3007/group';\n\nfunction query(filterBy) {\n  if (filterBy) {\n    var filterQuery = '?';\n    if (filterBy.hashtags.length >= 1) filterQuery += \"hashtags=\".concat(filterBy.hashtags, \"&\");\n    if (filterBy.cuisineType) filterQuery += \"cuisineType=\".concat(filterBy.cuisineType, \"&\");\n    if (filterBy.eventType) filterQuery += \"eventType=\".concat(filterBy.eventType, \"&\");\n    if (filterBy.guests) filterQuery += \"guests=\".concat(filterBy.guests, \"&\");\n    if (filterBy.title) filterQuery += \"title=\".concat(filterBy.title, \"&\");\n    return axios.get(\"\".concat(GROUP_ROUTE, \"/\").concat(filterQuery)).then(function (filterdGroups) {\n      return filterdGroups.data;\n    });\n  } else return axios.get(\"\".concat(GROUP_ROUTE)).then(function (groups) {\n    return groups.data;\n  });\n}\n\nfunction add(group) {\n  return axios.post(\"\".concat(GROUP_ROUTE), group).then(function (res) {\n    return res.data;\n  });\n}\n\nfunction update(group) {}\n\nfunction remove(groupId) {}\n\nfunction getById(groupId) {\n  return axios.get(\"\".concat(GROUP_ROUTE, \"/\").concat(groupId)).then(function (res) {\n    return res.data;\n  }).then(function (group) {\n    var groupUsers = group.users.map(function (userId) {\n      return userService.getUserById(userId);\n    });\n    var groupRecipes = group.recipes.map(function (recipeId) {\n      return recipesService.getRecipeById(recipeId);\n    });\n    var promiseArray = [_Promise.all(groupUsers), _Promise.all(groupRecipes)];\n    return _Promise.all(promiseArray).then(function (array) {\n      group.users = array[0];\n      group.recipes = array[1];\n      return group;\n    });\n  });\n}\n\nfunction askJoinGroup(ids) {\n  return axios.put(\"\".concat(GROUP_ROUTE, \"/join/\").concat(ids.groupId), ids).then(function (res) {\n    return res.data;\n  });\n}\n\nfunction addUserToGroup(ids) {\n  return axios.put(\"\".concat(GROUP_ROUTE, \"/accept/\").concat(ids.groupId), ids).then(function (res) {\n    return res.data;\n  });\n}\n\nfunction declineUserRequest(ids) {\n  return axios.put(\"\".concat(GROUP_ROUTE, \"/decline/\").concat(ids.groupId), ids).then(function (res) {\n    return res.data;\n  });\n}\n\nfunction removeRecipeFromGroup(recipeId, groupId) {\n  return axios.delete(\"\".concat(GROUP_ROUTE, \"/\").concat(groupId, \"/\").concat(recipeId)).then(function (res) {\n    return res;\n  });\n}\n\nfunction removeUserFromGroup(ids) {\n  return axios.put(\"\".concat(GROUP_ROUTE, \"/leave/\").concat(ids.groupId), ids).then(function (res) {\n    return res.data;\n  });\n}\n\nexport default {\n  query: query,\n  getById: getById,\n  add: add,\n  remove: remove,\n  update: update,\n  askJoinGroup: askJoinGroup,\n  addUserToGroup: addUserToGroup,\n  declineUserRequest: declineUserRequest,\n  removeRecipeFromGroup: removeRecipeFromGroup,\n  removeUserFromGroup: removeUserFromGroup\n};",{"version":3,"sources":["C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\services\\GroupService.js"],"names":["axios","userService","recipesService","GROUP_ROUTE","process","env","NODE_ENV","query","filterBy","filterQuery","hashtags","length","cuisineType","eventType","guests","title","get","then","filterdGroups","data","groups","add","group","post","res","update","remove","groupId","getById","groupUsers","users","map","userId","getUserById","groupRecipes","recipes","recipeId","getRecipeById","promiseArray","all","array","askJoinGroup","ids","put","addUserToGroup","declineUserRequest","removeRecipeFromGroup","delete","removeUserFromGroup"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport userService from './UserService'\r\nimport recipesService from './RecipeService'\r\n// TODO: UPDATE TO THE ACTUAL PROJ NAME\r\nconst GROUP_ROUTE = (process.env.NODE_ENV !== 'development') ? '/group' : 'http://localhost:3007/group'\r\n\r\nfunction query(filterBy) {\r\n    if (filterBy) {\r\n        let filterQuery = '?';\r\n        if (filterBy.hashtags.length >= 1) filterQuery += `hashtags=${filterBy.hashtags}&`\r\n        if (filterBy.cuisineType) filterQuery += `cuisineType=${filterBy.cuisineType}&`\r\n        if (filterBy.eventType) filterQuery += `eventType=${filterBy.eventType}&`\r\n        if (filterBy.guests) filterQuery += `guests=${filterBy.guests}&`\r\n        if (filterBy.title) filterQuery += `title=${filterBy.title}&`\r\n        return axios.get(`${GROUP_ROUTE}/${filterQuery}`).then(filterdGroups => filterdGroups.data)\r\n    }\r\n    else return axios.get(`${GROUP_ROUTE}`).then(groups => groups.data)\r\n}\r\n\r\nfunction add(group) {\r\n    return axios.post(`${GROUP_ROUTE}`, group)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n}\r\n\r\nfunction update(group) {\r\n}\r\n\r\nfunction remove(groupId) {\r\n}\r\n\r\nfunction getById(groupId) {\r\n    return axios.get(`${GROUP_ROUTE}/${groupId}`)\r\n        .then(res => res.data)\r\n        .then(group => {\r\n            var groupUsers = group.users.map(userId => {\r\n                    return userService.getUserById(userId)\r\n                })\r\n            var groupRecipes = group.recipes.map(recipeId => {\r\n                return recipesService.getRecipeById(recipeId)\r\n            })\r\n            var promiseArray = [Promise.all(groupUsers), Promise.all(groupRecipes)]\r\n            return Promise.all(promiseArray)\r\n                .then(array => {\r\n                    group.users = array[0]\r\n                    group.recipes = array[1]\r\n                    return group\r\n                })\r\n        })\r\n}\r\n\r\nfunction askJoinGroup(ids) {\r\n    return axios.put(`${GROUP_ROUTE}/join/${ids.groupId}`, ids).then((res) => res.data)\r\n}\r\nfunction addUserToGroup(ids) {\r\n    return axios.put(`${GROUP_ROUTE}/accept/${ids.groupId}`, ids).then((res) => res.data)\r\n\r\n\r\n}\r\nfunction declineUserRequest(ids) {\r\n    return axios.put(`${GROUP_ROUTE}/decline/${ids.groupId}`, ids).then((res) => res.data)\r\n}\r\n\r\nfunction removeRecipeFromGroup(recipeId, groupId) {\r\n    return axios.delete(`${GROUP_ROUTE}/${groupId}/${recipeId}`).then(res => res)\r\n}\r\n\r\nfunction removeUserFromGroup(ids) {\r\n    return axios.put(`${GROUP_ROUTE}/leave/${ids.groupId}`, ids).then((res) => res.data)\r\n\r\n}\r\n\r\nexport default {\r\n    query,\r\n    getById,\r\n    add,\r\n    remove,\r\n    update,\r\n    askJoinGroup,\r\n    addUserToGroup,\r\n    declineUserRequest,\r\n    removeRecipeFromGroup,\r\n    removeUserFromGroup\r\n}"]}]}