{"remainingRequest":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\store\\group-store.js","dependencies":[{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\store\\group-store.js","mtime":1553945801827},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport groupService from '../services/GroupService.js';\nimport RecipeService from '../services/RecipeService.js';\nVue.use(Vuex);\nvar groupStore = {\n  state: {\n    groups: [],\n    group: null,\n    pendUsers: [],\n    HomePageFitler: null,\n    isGroupAdmin: false\n  },\n  getters: {\n    groups: function groups(state) {\n      return state.groups;\n    },\n    group: function group(state) {\n      return state.group;\n    },\n    pendUsers: function pendUsers(state) {\n      return state.pendUsers;\n    },\n    groupAdmin: function groupAdmin(state) {\n      return state.groupAdmin;\n    },\n    isGroupAdmin: function isGroupAdmin(state) {\n      return state.isGroupAdmin;\n    }\n  },\n  mutations: {\n    cleanGroup: function cleanGroup(state) {\n      state.group = null;\n      state.isGroupAdmin = false;\n    },\n    setGroups: function setGroups(state, _ref) {\n      var groups = _ref.groups;\n      state.groups = groups;\n    },\n    setGroup: function setGroup(state, _ref2) {\n      var group = _ref2.group;\n      state.group = group;\n    },\n    setPendUsers: function setPendUsers(state, _ref3) {\n      var pendUsers = _ref3.pendUsers;\n      state.pendUsers = pendUsers;\n    },\n    removeUserFromGroup: function removeUserFromGroup(state, _ref4) {\n      var userId = _ref4.userId;\n      console.log(userId);\n      state.group.users = state.group.users.filter(function (user) {\n        return user !== userId;\n      });\n    },\n    removeRecipeFromGroup: function removeRecipeFromGroup(state, _ref5) {\n      var recipeId = _ref5.recipeId;\n      var recipeIdx = state.group.recipes.findIndex(function (recipe) {\n        return recipe._id === recipeId;\n      });\n      state.group.recipes.splice(recipeIdx, 1);\n    },\n    setAdminObj: function setAdminObj(state, _ref6) {\n      var admin = _ref6.admin;\n      state.group.admin = admin;\n    },\n    setIsGroupAdmin: function setIsGroupAdmin(state, _ref7) {\n      var bool = _ref7.bool;\n      state.isGroupAdmin = bool;\n    }\n  },\n  actions: {\n    cleanData: function cleanData(_ref8) {\n      var commit = _ref8.commit;\n      commit({\n        type: 'cleanGroup'\n      });\n    },\n    getGroups: function getGroups(_ref9) {\n      var commit = _ref9.commit;\n      return groupService.query().then(function (groups) {\n        return commit({\n          type: 'setGroups',\n          groups: groups\n        });\n      });\n    },\n    setFilterFromHome: function setFilterFromHome(_ref10, _ref11) {\n      var commit = _ref10.commit;\n      var filterObj = _ref11.filterObj;\n      commit;\n    },\n    filterGroups: function filterGroups(_ref12, _ref13) {\n      var commit = _ref12.commit;\n      var filterBy = _ref13.filterBy;\n      groupService.query(filterBy).then(function (groups) {\n        commit({\n          type: 'setGroups',\n          groups: groups\n        });\n      });\n    },\n    // getGroup({ commit }, { groupId }) {\n    //     return groupService.getById(groupId).then((group) => {\n    //         commit({ type: 'setGroup', group })\n    //     })\n    // },    }\n    getGroupById: function getGroupById(_ref14, _ref15) {\n      var commit = _ref14.commit,\n          state = _ref14.state;\n      var groupId = _ref15.groupId;\n      commit({\n        type: 'cleanGroup'\n      });\n      return groupService.getById(groupId).then(function (group) {\n        commit({\n          type: 'setGroup',\n          group: group\n        });\n        commit({\n          type: 'setPendUsers',\n          pendUsers: group.pendingUsers\n        });\n        return group;\n      });\n    },\n    removeRecipeFromGroup: function removeRecipeFromGroup(_ref16, _ref17) {\n      var commit = _ref16.commit;\n      var recipeId = _ref17.recipeId,\n          groupId = _ref17.groupId;\n      groupService.removeRecipeFromGroup(recipeId, groupId).then(function () {\n        return commit({\n          type: 'removeRecipeFromGroup',\n          recipeId: recipeId\n        });\n      });\n    },\n    addGroup: function addGroup(_ref18, _ref19) {\n      var commit = _ref18.commit,\n          state = _ref18.state;\n      var group = _ref19.group;\n      return groupService.add(group).then(function (newGroup) {\n        commit({\n          type: 'setGroup',\n          newGroup: newGroup\n        });\n        return newGroup;\n      });\n    },\n    askJoinGroup: function askJoinGroup(_ref20, _ref21) {\n      var commit = _ref20.commit;\n      var ids = _ref21.ids;\n      return groupService.askJoinGroup(ids).then(function () {\n        'asked successfuly';\n      });\n    },\n    removeUserFromGroup: function removeUserFromGroup(_ref22, _ref23) {\n      var commit = _ref22.commit;\n      var ids = _ref23.ids;\n      return groupService.removeUserFromGroup(ids).then(function () {\n        // make it reactive\n        commit({\n          type: 'removeUserFromGroup',\n          userId: ids.userId\n        });\n      });\n    },\n    acceptUserToGroup: function acceptUserToGroup(_ref24, _ref25) {\n      var commit = _ref24.commit;\n      var ids = _ref25.ids;\n      return groupService.addUserToGroup(ids).then(function (res) {\n        return res;\n      });\n    },\n    declineUserRequest: function declineUserRequest(_ref26, _ref27) {\n      var commit = _ref26.commit;\n      var ids = _ref27.ids;\n      return groupService.declineUserRequest(ids).then(function (res) {\n        return res;\n      });\n    }\n  }\n};\nexport default groupStore;",{"version":3,"sources":["C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\store\\group-store.js"],"names":["Vue","Vuex","groupService","RecipeService","use","groupStore","state","groups","group","pendUsers","HomePageFitler","isGroupAdmin","getters","groupAdmin","mutations","cleanGroup","setGroups","setGroup","setPendUsers","removeUserFromGroup","userId","console","log","users","filter","user","removeRecipeFromGroup","recipeId","recipeIdx","recipes","findIndex","recipe","_id","splice","setAdminObj","admin","setIsGroupAdmin","bool","actions","cleanData","commit","type","getGroups","query","then","setFilterFromHome","filterObj","filterGroups","filterBy","getGroupById","groupId","getById","pendingUsers","addGroup","add","newGroup","askJoinGroup","ids","acceptUserToGroup","addUserToGroup","res","declineUserRequest"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nimport groupService from '../services/GroupService.js'\r\nimport RecipeService from '../services/RecipeService.js';\r\n\r\nVue.use(Vuex)\r\n\r\nconst groupStore = {\r\n    state: {\r\n        groups: [],\r\n        group: null,\r\n        pendUsers: [],\r\n        HomePageFitler:null,\r\n        isGroupAdmin: false\r\n\r\n    }, getters: {\r\n        groups(state) {\r\n            return state.groups\r\n        },\r\n        group(state) {\r\n            return state.group\r\n        },\r\n        pendUsers(state) {\r\n            return state.pendUsers\r\n        },\r\n        groupAdmin(state) {\r\n            return state.groupAdmin\r\n        },\r\n        isGroupAdmin(state) {\r\n            return state.isGroupAdmin\r\n        }\r\n    },\r\n    mutations: {\r\n        cleanGroup(state) {\r\n            state.group = null\r\n            state.isGroupAdmin = false\r\n        },\r\n        setGroups(state, { groups }) {\r\n            state.groups = groups\r\n        },\r\n        setGroup(state, { group }) {\r\n            state.group = group\r\n        },\r\n        setPendUsers(state, { pendUsers }) {\r\n            state.pendUsers = pendUsers\r\n        },\r\n        removeUserFromGroup(state, { userId }) {\r\n            console.log(userId);\r\n\r\n            state.group.users = state.group.users.filter(user => user !== userId)\r\n        },\r\n        removeRecipeFromGroup(state, { recipeId }) {\r\n            let recipeIdx = state.group.recipes.findIndex(recipe => recipe._id === recipeId)\r\n            state.group.recipes.splice(recipeIdx, 1)\r\n        },\r\n        setAdminObj(state, { admin }) {\r\n            state.group.admin = admin\r\n        },\r\n        setIsGroupAdmin(state, { bool }) {\r\n            state.isGroupAdmin = bool\r\n        }\r\n    },\r\n    actions: {\r\n        cleanData({ commit }) {\r\n            commit({ type: 'cleanGroup' })\r\n        },\r\n        getGroups({ commit }) {\r\n            return groupService.query().then(groups => commit({ type: 'setGroups', groups }))\r\n        },\r\n        setFilterFromHome({commit} , {filterObj}){\r\ncommit\r\n        },\r\n        filterGroups({ commit }, { filterBy }) {\r\n            groupService.query(filterBy)\r\n                .then((groups) => { commit({ type: 'setGroups', groups }) })\r\n        },\r\n        // getGroup({ commit }, { groupId }) {\r\n        //     return groupService.getById(groupId).then((group) => {\r\n        //         commit({ type: 'setGroup', group })\r\n        //     })\r\n        // },    }\r\n        getGroupById({ commit, state }, { groupId }) {\r\n            commit({ type: 'cleanGroup' })\r\n            return groupService.getById(groupId)\r\n                .then(group => {\r\n                    commit({ type: 'setGroup', group })\r\n                    commit({ type: 'setPendUsers', pendUsers: group.pendingUsers })\r\n                    return group\r\n                })\r\n        },\r\n\r\n        removeRecipeFromGroup({ commit }, { recipeId, groupId }) {\r\n            groupService.removeRecipeFromGroup(recipeId, groupId)\r\n                .then(() => commit({ type: 'removeRecipeFromGroup', recipeId }))\r\n        },\r\n        addGroup({ commit, state }, { group }) {\r\n            return groupService.add(group)\r\n                .then(newGroup => {\r\n                    commit({ type: 'setGroup', newGroup })\r\n                    return newGroup\r\n                })\r\n        },\r\n        askJoinGroup({ commit }, { ids }) {\r\n            return groupService.askJoinGroup(ids).then(() => { 'asked successfuly' })\r\n        },\r\n        removeUserFromGroup({ commit }, { ids }) {\r\n            return groupService.removeUserFromGroup(ids).then(() => {\r\n                // make it reactive\r\n                commit({ type: 'removeUserFromGroup', userId: ids.userId })\r\n            })\r\n        },\r\n        acceptUserToGroup({ commit }, { ids }) {\r\n            return groupService.addUserToGroup(ids).then((res) => res)\r\n\r\n        },\r\n        declineUserRequest({ commit }, { ids }) {\r\n            return groupService.declineUserRequest(ids).then((res) => res)\r\n        },\r\n\r\n    }\r\n}\r\n\r\nexport default groupStore\r\n"]}]}