{"remainingRequest":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\views\\user-profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\views\\user-profile.vue","mtime":1553951956365},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport profileDetails from \"../components/users/profile-details-cmp\";\r\n\r\nexport default {\r\n  components: {\r\n    profileDetails\r\n  },\r\n  data() {\r\n    return {\r\n      user: null,\r\n      groups: [],\r\n      managedGroups: [],\r\n      isMyUserProfile: false\r\n    };\r\n  },\r\n  created() {\r\n    var userId = this.$route.params.userId;\r\n    this.isMyUserProfile =\r\n      this.$store.getters.user && this.$store.getters.user._id === userId\r\n        ? true\r\n        : false;\r\n    this.$store.dispatch({ type: \"getUserById\", userId }).then(user => {\r\n      this.user = user;\r\n      if (user.groups) this.getUserGroups();\r\n    });\r\n  },\r\n  methods: {\r\n    getUserGroups() {\r\n      this.user.groups.forEach(groupId => {\r\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\r\n          this.groups.push(group);\r\n        });\r\n      });\r\n\r\n      this.user.createdGroups.forEach(groupId => {\r\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\r\n          this.managedGroups.push(group);\r\n        });\r\n      });\r\n    }\r\n  },\r\n  computed: {\r\n    userGroups() {\r\n      return this.groups.concat(this.managedGroups);\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["user-profile.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user-profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <section class=\"profile-container\">\r\n    <profile-details\r\n      :isMyUserProfile=\"isMyUserProfile\"\r\n      :user=\"user\"\r\n      :groups=\"userGroups\"\r\n      v-if=\"user\"\r\n    />\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport profileDetails from \"../components/users/profile-details-cmp\";\r\n\r\nexport default {\r\n  components: {\r\n    profileDetails\r\n  },\r\n  data() {\r\n    return {\r\n      user: null,\r\n      groups: [],\r\n      managedGroups: [],\r\n      isMyUserProfile: false\r\n    };\r\n  },\r\n  created() {\r\n    var userId = this.$route.params.userId;\r\n    this.isMyUserProfile =\r\n      this.$store.getters.user && this.$store.getters.user._id === userId\r\n        ? true\r\n        : false;\r\n    this.$store.dispatch({ type: \"getUserById\", userId }).then(user => {\r\n      this.user = user;\r\n      if (user.groups) this.getUserGroups();\r\n    });\r\n  },\r\n  methods: {\r\n    getUserGroups() {\r\n      this.user.groups.forEach(groupId => {\r\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\r\n          this.groups.push(group);\r\n        });\r\n      });\r\n\r\n      this.user.createdGroups.forEach(groupId => {\r\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\r\n          this.managedGroups.push(group);\r\n        });\r\n      });\r\n    }\r\n  },\r\n  computed: {\r\n    userGroups() {\r\n      return this.groups.concat(this.managedGroups);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.profile-container {\r\n  padding-top: calc(15px + 25%);\r\n  min-height: calc(100vh - 200px);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n}\r\n</style>\r\n"]}]}