{"remainingRequest":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yovel/Desktop/sprint 4/Spotifood/frontend/src/views/group-recipe-form.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/src/views/group-recipe-form.vue","mtime":1553721415398},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport recipeService from \"../services/RecipeService\";\nimport uploadService from \"../services/UploadService\";\nexport default {\n  data() {\n    return {\n      groupId: this.$route.query.groupId,\n      recipeId: this.$route.query.recipeId,\n      recipe: {\n        title: \"\",\n        imgs: [],\n        ingredients: {},\n        instructions: [\"\"],\n        categories: [],\n        prepTime: null,\n        createdAt: null,\n        createdBy: this.$route.query.creatorId\n      },\n      allCategories: [],\n      ingredients: [\"\"],\n      ingredientsQuantity: [],\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      uploadedImgs: {},\n      isLoading: false\n    };\n  },\n  methods: {\n    addTextArea() {\n      this.recipe.instructions.push(\"\");\n    },\n    SaveRecipe() {\n      this.isLoading = true;\n      this.recipe.ingredients = {};\n\n      this.ingredients.forEach((ingredient, idx) => {\n        if (!ingredient || !this.ingredientsQuantity[idx]) return;\n        this.recipe.ingredients[ingredient] = this.ingredientsQuantity[idx];\n      });\n\n      let imgsUrls = Object.values(this.uploadedImgs);\n\n      var saveRecipe = this.recipeId\n        ? recipeService.updateRecipe(this.recipe, imgsUrls)\n        : recipeService.addRecipe(this.recipe, this.groupId, imgsUrls);\n      saveRecipe.then(() => {\n        if (this.recipeId) this.$toast.Success(\"Recipe Updated Successfully\");\n        else this.$toast.Success(\"Recipe Added Successfully\");\n        this.isLoading = false;\n        this.$router.push(`/groups/${this.groupId}`);\n      })\n      .catch(err=>{\n        this.$toast.Error(\"Something went wrong\");\n        console.log('err',err)\n      })\n    },\n    addIngredientInput() {\n      if (\n        this.ingredients[this.ingredients.length - 1] &&\n        this.ingredientsQuantity[this.ingredients.length - 1]\n      ) {\n        this.ingredients.push(\"\");\n        this.ingredientsQuantity.push(0);\n      }\n    },\n    handleRemove(file, fileList) {\n      delete this.uploadedImgs[file.uid];\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    uploadImg(input) {\n      const formData = new FormData();\n      formData.append(\"file\", input.file);\n      uploadService.uploadImg(formData).then(url => {\n        this.uploadedImgs[input.file.uid] = url;\n      });\n    },\n    onUpload(url, file, fileList) {\n      this.uploadedImgs[file.uid] = url;\n    }\n  },\n  computed: {\n    formTitle() {\n      return this.recipeId ? \"Edit Recipe\" : \"Add Recipe\";\n    }\n  },\n  created() {\n    if (this.recipeId) {\n      recipeService.getRecipeById(this.recipeId).then(recipe => {\n        this.recipe = recipe;\n        this.ingredients = Object.keys(recipe.ingredients);\n        this.ingredientsQuantity = Object.values(recipe.ingredients);\n      });\n    }\n    this.allCategories = this.$store.getters.categories;\n  },\n  watch: {\n    ingredients() {\n      this.addIngredientInput();\n    },\n    ingredientsQuantity() {\n      this.addIngredientInput();\n    }\n  }\n};\n",{"version":3,"sources":["group-recipe-form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"group-recipe-form.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section class=\"recipe-form\" v-loading=\"isLoading\">\n    <h1 class=\"wrong-route\" v-if=\"!recipe.createdBy\">Who U?</h1>\n    <form v-else>\n      <h1>{{formTitle}}</h1>\n      <label>Title:\n        <el-input placeholder=\"Enter Recipe Title\" v-model=\"recipe.title\"></el-input>\n        <br>\n      </label>\n      <label v-for=\"(ingredient,idx) in ingredients\" :key=\"idx + 'ingredient'\">Ingredient:\n        <el-input-number v-model=\"ingredientsQuantity[idx]\" :step=\"0.25\" :max=\"100\"></el-input-number>\n        <el-input placeholder=\"ingredient\" v-model=\"ingredients[idx]\"></el-input>\n        <br>\n      </label>\n      <label\n        v-for=\"(instruction,idx) in recipe.instructions\"\n        :key=\"idx + 'instruction'\"\n        style=\"display: inherit; width: 100%;\"\n      >Instruction:\n        <el-input\n          type=\"textarea\"\n          autosize\n          placeholder=\"Enter Instruction\"\n          v-model=\"recipe.instructions[idx]\"\n        ></el-input>\n      </label>\n      <i class=\"fas fa-plus-circle\" @click=\"addTextArea\" title=\"Add Instruction\"></i>\n      <br>\n      <label>Prep Time:\n        <el-input-number v-model=\"recipe.prepTime\" :step=\"1\" :max=\"10000\"></el-input-number>\n        <br>\n      </label>\n      <label>Categories:\n        <el-select multiple v-model=\"recipe.categories\" filterable placeholder=\"Select Categories\">\n          <el-option\n            v-for=\"category in allCategories\"\n            :key=\"category\"\n            :label=\"category\"\n            :value=\"category\"\n          ></el-option>\n        </el-select>\n      </label>\n      <div class=\"upload-gallery\">\n        <div class=\"exist-imgs\" v-for=\"(img,idx) in recipe.imgs\" :key=\"idx + img\">\n          <!-- TODO: SHOW DELETE AND PREVIEW ON HOVER -->\n          <img :src=\"img\">\n        </div>\n        <el-upload\n          action=\"http://localhost:3007/upload-img\"\n          list-type=\"picture-card\"\n          :on-preview=\"handlePictureCardPreview\"\n          :on-remove=\"handleRemove\"\n          :on-success=\"onUpload\"\n        >\n          <i class=\"el-icon-plus\"></i>\n        </el-upload>\n        <el-dialog :visible.sync=\"dialogVisible\">\n          <img width=\"100%\" :src=\"dialogImageUrl\" alt>\n        </el-dialog>\n      </div>\n      <el-button plain @click=\"SaveRecipe\">Submit</el-button>\n    </form>\n  </section>\n</template>\n\n<script>\nimport recipeService from \"../services/RecipeService\";\nimport uploadService from \"../services/UploadService\";\nexport default {\n  data() {\n    return {\n      groupId: this.$route.query.groupId,\n      recipeId: this.$route.query.recipeId,\n      recipe: {\n        title: \"\",\n        imgs: [],\n        ingredients: {},\n        instructions: [\"\"],\n        categories: [],\n        prepTime: null,\n        createdAt: null,\n        createdBy: this.$route.query.creatorId\n      },\n      allCategories: [],\n      ingredients: [\"\"],\n      ingredientsQuantity: [],\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      uploadedImgs: {},\n      isLoading: false\n    };\n  },\n  methods: {\n    addTextArea() {\n      this.recipe.instructions.push(\"\");\n    },\n    SaveRecipe() {\n      this.isLoading = true;\n      this.recipe.ingredients = {};\n\n      this.ingredients.forEach((ingredient, idx) => {\n        if (!ingredient || !this.ingredientsQuantity[idx]) return;\n        this.recipe.ingredients[ingredient] = this.ingredientsQuantity[idx];\n      });\n\n      let imgsUrls = Object.values(this.uploadedImgs);\n\n      var saveRecipe = this.recipeId\n        ? recipeService.updateRecipe(this.recipe, imgsUrls)\n        : recipeService.addRecipe(this.recipe, this.groupId, imgsUrls);\n      saveRecipe.then(() => {\n        if (this.recipeId) this.$toast.Success(\"Recipe Updated Successfully\");\n        else this.$toast.Success(\"Recipe Added Successfully\");\n        this.isLoading = false;\n        this.$router.push(`/groups/${this.groupId}`);\n      })\n      .catch(err=>{\n        this.$toast.Error(\"Something went wrong\");\n        console.log('err',err)\n      })\n    },\n    addIngredientInput() {\n      if (\n        this.ingredients[this.ingredients.length - 1] &&\n        this.ingredientsQuantity[this.ingredients.length - 1]\n      ) {\n        this.ingredients.push(\"\");\n        this.ingredientsQuantity.push(0);\n      }\n    },\n    handleRemove(file, fileList) {\n      delete this.uploadedImgs[file.uid];\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    uploadImg(input) {\n      const formData = new FormData();\n      formData.append(\"file\", input.file);\n      uploadService.uploadImg(formData).then(url => {\n        this.uploadedImgs[input.file.uid] = url;\n      });\n    },\n    onUpload(url, file, fileList) {\n      this.uploadedImgs[file.uid] = url;\n    }\n  },\n  computed: {\n    formTitle() {\n      return this.recipeId ? \"Edit Recipe\" : \"Add Recipe\";\n    }\n  },\n  created() {\n    if (this.recipeId) {\n      recipeService.getRecipeById(this.recipeId).then(recipe => {\n        this.recipe = recipe;\n        this.ingredients = Object.keys(recipe.ingredients);\n        this.ingredientsQuantity = Object.values(recipe.ingredients);\n      });\n    }\n    this.allCategories = this.$store.getters.categories;\n  },\n  watch: {\n    ingredients() {\n      this.addIngredientInput();\n    },\n    ingredientsQuantity() {\n      this.addIngredientInput();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.recipe-form {\n  margin-top: 50px;\n  min-height: calc(100vh - 250px);\n}\n.wrong-route {\n  font-size: 3em;\n  position: absolute;\n  left: 45vw;\n  top: 40vh;\n}\n.el-input {\n  width: 40vw;\n}\n.el-input-number {\n  width: 140px;\n}\ni {\n  margin-left: 5px;\n  font-size: 1.5em;\n  &:hover {\n    color: lightseagreen;\n    cursor: pointer;\n  }\n}\nform {\n  display: flex;\n  flex-direction: column;\n  width: 70vw;\n  min-height: 100%;\n  justify-content: center;\n  margin: auto;\n  align-items: baseline;\n  & > * {\n    margin-bottom: 15px;\n  }\n}\n.upload-img {\n  width: 100px;\n  height: 100px;\n  background-color: aliceblue;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 2px dotted gainsboro;\n  border-radius: 10px;\n}\n.upload-gallery {\n  display: flex;\n  flex-wrap: wrap;\n  .exist-imgs > img {\n    height: 148px;\n    width: 148px;\n    object-fit: fill;\n    border-radius: 5px;\n    margin-right: 10px;\n  }\n}\n</style>\n"]}]}