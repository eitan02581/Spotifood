{"remainingRequest":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yovel/Desktop/sprint 4/Spotifood/frontend/src/components/users/profile-events-container-cmp.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/src/components/users/profile-events-container-cmp.vue","mtime":1553909051741},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { gmapApi } from \"vue2-google-maps\";\nimport eventsList from \"./events-list-cmp\";\nexport default {\n  components: {\n    eventsList\n  },\n  props: {\n    groups: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedEventLoc: null,\n      mapLoaded: false\n    };\n  },\n  computed: {\n    mapCenter() {\n      return this.groups.length ? this.selectedEventLoc : { lat: 31, lng: 31 };\n    }\n  },\n  methods: {\n    SetOnMap(loc) {\n      this.selectedEventLoc = loc;\n    }\n  },\n  created() {\n    setTimeout(() => {\n      this.mapLoaded = true;\n      if (this.groups.length) {\n        this.selectedEventLoc = this.groups[0].location;\n      }\n    }, 1500);\n  }\n};\n",{"version":3,"sources":["profile-events-container-cmp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"profile-events-container-cmp.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\n  <section class=\"profile-events-container\">\n    <events-list :groups=\"groups\" @SetOnMap=\"SetOnMap\"/>\n    <div class=\"map-container\">\n      <img v-if=\"!mapLoaded\" src=\"@/assets/loading_imgs/map.gif\" alt=\"map_loading\">\n      <gmap-map v-if=\"mapLoaded\" :center=\"mapCenter\" :zoom=\"7\">\n        <template v-if=\"groups.length\">\n          <gmap-marker v-for=\"group in groups\" :key=\"group._id\" :position=\"group.location\"></gmap-marker>\n        </template>\n      </gmap-map>\n    </div>\n  </section>\n</template>\n\n<script>\nimport { gmapApi } from \"vue2-google-maps\";\nimport eventsList from \"./events-list-cmp\";\nexport default {\n  components: {\n    eventsList\n  },\n  props: {\n    groups: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      selectedEventLoc: null,\n      mapLoaded: false\n    };\n  },\n  computed: {\n    mapCenter() {\n      return this.groups.length ? this.selectedEventLoc : { lat: 31, lng: 31 };\n    }\n  },\n  methods: {\n    SetOnMap(loc) {\n      this.selectedEventLoc = loc;\n    }\n  },\n  created() {\n    setTimeout(() => {\n      this.mapLoaded = true;\n      if (this.groups.length) {\n        this.selectedEventLoc = this.groups[0].location;\n      }\n    }, 1500);\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.profile-events-container {\n  width: 90%;\n  display: flex;\n  flex-direction: column-reverse;\n}\n.map-container {\n  display: block;\n  height: 70vh;\n  max-height: 600px;\n  width: 100%;\n  .vue-map-container {\n    height: 100%;\n  }\n}\n@media (min-width: 600px) {\n  .profile-events-container {\n    width: 90%;\n    margin: 20px auto;\n    flex-direction: row;\n  }\n  .map-container {\n    width: calc(100% - 250px);\n  }\n}\n@media (max-width: 350px) {\n  .profile-events-container {\n    margin: 15px auto;\n    width: 100%;\n  }\n}\n</style>\n"]}]}