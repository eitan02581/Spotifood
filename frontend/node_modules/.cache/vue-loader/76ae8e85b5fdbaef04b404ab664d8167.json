{"remainingRequest":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\components\\groups\\group-details\\group-recipes-list-cmp.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\src\\components\\groups\\group-details\\group-recipes-list-cmp.vue","mtime":1553717120263},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Ron Elnekave\\Desktop\\spotifood\\oved\\spotifood\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  props: {\r\n    recipes: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"1\"\r\n    };\r\n  },\r\n  methods: {\r\n    addRecipe() {\r\n      this.$router.push({\r\n        path: \"/groups/recipeForm\",\r\n        query: {\r\n          groupId: this.$route.params.groupId,\r\n          creatorId: this.$store.getters.group.admin._id\r\n        }\r\n      });\r\n    },\r\n    updateRecipe(recipeId, creatorId) {\r\n      this.$router.push({\r\n        path: \"/groups/recipeForm\",\r\n        query: {\r\n          groupId: this.$route.params.groupId,\r\n          creatorId,\r\n          recipeId\r\n        }\r\n      });\r\n    },\r\n    removeRecipe(recipeId) {\r\n      this.$store\r\n        .dispatch(\"removeRecipeFromGroup\", {\r\n          recipeId,\r\n          groupId: this.$route.params.groupId\r\n        })\r\n        .then(() => this.$toast.Success(\"Recipe Deleted Successfully\"));\r\n    },\r\n    uploadRecipe() {}\r\n  },\r\n  computed: {\r\n    isGroupAdmin() {\r\n      return this.$store.getters.isGroupAdmin;\r\n    }\r\n  },\r\n  created() {}\r\n};\r\n",{"version":3,"sources":["group-recipes-list-cmp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"group-recipes-list-cmp.vue","sourceRoot":"src/components/groups/group-details","sourcesContent":["<template>\r\n  <section class=\"accordion\">\r\n    <div class=\"recipes-header\">\r\n      <h1>Recipes</h1>\r\n      <template v-if=\"isGroupAdmin\">\r\n        <i class=\"fas fa-plus\" @click=\"addRecipe\"></i>\r\n      </template>\r\n    </div>\r\n    <template v-if=\"!recipes.length >= 1\">\r\n      <h1>My Recipes Are A Secret ;)</h1>\r\n    </template>\r\n    <el-collapse\r\n      id=\"rec\"\r\n      v-model=\"activeName\"\r\n      accordion\r\n      v-for=\"(recipe,idx) in recipes\"\r\n      :key=\"recipe._id\"\r\n    >\r\n      <el-collapse-item :title=\"recipe.title\" :name=\"idx\">\r\n        <div class=\"collapse-context\">\r\n          <div>\r\n            <el-carousel height=\"200px\">\r\n              <el-carousel-item v-for=\"(img,idx) in recipe.imgs\" :key=\"`${img}${idx}`\">\r\n                <img :src=\"img\" alt=\"Recipe Img\">\r\n              </el-carousel-item>\r\n            </el-carousel>\r\n            <ul>\r\n              <li v-for=\"ingredient in Object.keys(recipe.ingredients)\" :key=\"ingredient\">\r\n                <span class=\"quantity\">{{recipe.ingredients[ingredient]}}</span>\r\n                {{ingredient}}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <ol>\r\n            <li v-for=\"(instruction,idx) in recipe.instructions\" :key=\"idx\">{{instruction}}</li>\r\n          </ol>\r\n        </div>\r\n        <i class=\"far fa-edit\" @click=\"updateRecipe(recipe._id,recipe.createdBy)\"></i>\r\n        <i class=\"far fa-trash-alt\" @click=\"removeRecipe(recipe._id)\"></i>\r\n      </el-collapse-item>\r\n    </el-collapse>\r\n  </section>\r\n</template>\r\n<script>\r\nexport default {\r\n  props: {\r\n    recipes: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"1\"\r\n    };\r\n  },\r\n  methods: {\r\n    addRecipe() {\r\n      this.$router.push({\r\n        path: \"/groups/recipeForm\",\r\n        query: {\r\n          groupId: this.$route.params.groupId,\r\n          creatorId: this.$store.getters.group.admin._id\r\n        }\r\n      });\r\n    },\r\n    updateRecipe(recipeId, creatorId) {\r\n      this.$router.push({\r\n        path: \"/groups/recipeForm\",\r\n        query: {\r\n          groupId: this.$route.params.groupId,\r\n          creatorId,\r\n          recipeId\r\n        }\r\n      });\r\n    },\r\n    removeRecipe(recipeId) {\r\n      this.$store\r\n        .dispatch(\"removeRecipeFromGroup\", {\r\n          recipeId,\r\n          groupId: this.$route.params.groupId\r\n        })\r\n        .then(() => this.$toast.Success(\"Recipe Deleted Successfully\"));\r\n    },\r\n    uploadRecipe() {}\r\n  },\r\n  computed: {\r\n    isGroupAdmin() {\r\n      return this.$store.getters.isGroupAdmin;\r\n    }\r\n  },\r\n  created() {}\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@media only screen and (min-width: 600px) {\r\n  ul,\r\n  ol {\r\n    padding-top: 5vh;\r\n    li > .quantity {\r\n      font-size: 1.3em !important;\r\n    }\r\n    li {\r\n      list-style: unset;\r\n    }\r\n  }\r\n  h1 {\r\n    margin: 15px 0;\r\n    font-size: 1.75em;\r\n  }\r\n  .accordion {\r\n    margin: 0 50px;\r\n    .recipes-header {\r\n      display: flex;\r\n      align-items: center;\r\n      h1 {\r\n        color: #607d8b;\r\n        font-size: 30px;\r\n\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n  .el-carousel {\r\n    width: 250px;\r\n    height: 200px;\r\n  }\r\n  .el-carousel__item {\r\n    width: 250px;\r\n    height: 200px;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n  .el-carousel__item:nth-child(2n) {\r\n    background-color: #99a9bf;\r\n  }\r\n  .el-carousel__item:nth-child(2n + 1) {\r\n    background-color: #d3dce6;\r\n  }\r\n  .collapse-context {\r\n    padding: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .el-collapse-item__header {\r\n  }\r\n  i {\r\n    margin-left: 5px;\r\n    font-size: 2em;\r\n    &:hover {\r\n      color: lightseagreen;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n  ul,\r\n  ol {\r\n    padding-top: 5vh;\r\n    li > .quantity {\r\n      font-size: 1.3em !important;\r\n    }\r\n    li {\r\n      list-style: unset;\r\n    }\r\n  }\r\n  h1 {\r\n    margin: 15px 0;\r\n    font-size: 1.75em;\r\n  }\r\n  .accordion {\r\n    margin: 0 50px;\r\n    .recipes-header {\r\n      display: flex;\r\n      align-items: center;\r\n      h1 {\r\n        color: #607d8b;\r\n        font-size: 30px;\r\n\r\n        margin-right: 5px;\r\n      }\r\n    }\r\n  }\r\n  .el-carousel {\r\n    width: 250px;\r\n    height: 200px;\r\n  }\r\n  .el-carousel__item {\r\n    width: 250px;\r\n    height: 200px;\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n  .el-carousel__item:nth-child(2n) {\r\n    background-color: #99a9bf;\r\n  }\r\n  .el-carousel__item:nth-child(2n + 1) {\r\n    background-color: #d3dce6;\r\n  }\r\n  .collapse-context {\r\n    padding: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n  }\r\n  .el-collapse-item__header {\r\n  }\r\n  i {\r\n    margin-left: 5px;\r\n    font-size: 2em;\r\n    &:hover {\r\n      color: lightseagreen;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}