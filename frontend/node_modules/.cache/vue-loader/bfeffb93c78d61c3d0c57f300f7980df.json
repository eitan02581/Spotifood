{"remainingRequest":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yovel/Desktop/sprint 4/Spotifood/frontend/src/views/user-profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/src/views/user-profile.vue","mtime":1553908483723},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yovel/Desktop/sprint 4/Spotifood/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport profileDetails from \"../components/users/profile-details-cmp\";\n\nexport default {\n  components: {\n    profileDetails\n  },\n  data() {\n    return {\n      user: null,\n      groups: [],\n      managedGroups: [],\n      isMyUserProfile: false\n    };\n  },\n  created() {\n    var userId = this.$route.params.userId;\n    this.isMyUserProfile =\n      this.$store.getters.user && this.$store.getters.user._id === userId\n        ? true\n        : false;\n    this.$store.dispatch({ type: \"getUserById\", userId }).then(user => {\n      this.user = user;\n      if (user.groups) this.getUserGroups();\n    });\n  },\n  methods: {\n    getUserGroups() {\n      this.user.groups.forEach(groupId => {\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\n          this.groups.push(group);\n        });\n      });\n\n      this.user.createdGroups.forEach(groupId => {\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\n          this.managedGroups.push(group);\n        });\n      });\n    }\n  },\n  computed: {\n    userGroups() {\n      return this.groups.concat(this.managedGroups);\n    }\n  }\n};\n",{"version":3,"sources":["user-profile.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"user-profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <section class=\"profile-container\">\n    <profile-details\n      :isMyUserProfile=\"isMyUserProfile\"\n      :user=\"user\"\n      :groups=\"userGroups\"\n      v-if=\"user\"\n    />\n  </section>\n</template>\n\n<script>\nimport profileDetails from \"../components/users/profile-details-cmp\";\n\nexport default {\n  components: {\n    profileDetails\n  },\n  data() {\n    return {\n      user: null,\n      groups: [],\n      managedGroups: [],\n      isMyUserProfile: false\n    };\n  },\n  created() {\n    var userId = this.$route.params.userId;\n    this.isMyUserProfile =\n      this.$store.getters.user && this.$store.getters.user._id === userId\n        ? true\n        : false;\n    this.$store.dispatch({ type: \"getUserById\", userId }).then(user => {\n      this.user = user;\n      if (user.groups) this.getUserGroups();\n    });\n  },\n  methods: {\n    getUserGroups() {\n      this.user.groups.forEach(groupId => {\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\n          this.groups.push(group);\n        });\n      });\n\n      this.user.createdGroups.forEach(groupId => {\n        this.$store.dispatch({ type: \"getGroupById\", groupId }).then(group => {\n          this.managedGroups.push(group);\n        });\n      });\n    }\n  },\n  computed: {\n    userGroups() {\n      return this.groups.concat(this.managedGroups);\n    }\n  }\n};\n</script>\n\n<style scoped lang=\"scss\">\n.profile-container {\n  padding-top: calc(25px + 25%);\n  min-height: calc(100vh - 200px);\n  width: 100%;\n  margin: 0 auto;\n}\n</style>\n"]}]}